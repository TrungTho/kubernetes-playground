name: Linting and Testing

on:
  push:
    branches:
      - main
    paths:
      - "universal-helm/charts/**"
      - "universal-helm/test/**"
  pull_request:
    branches:
      - "*"
    paths:
      - "universal-helm/charts/**"
      - "universal-helm/test/**"

permissions:
  id-token: write
  contents: write
  pull-requests: write
  packages: write

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    env:
      CHART_DIR: universal-helm/charts
    steps:
      - name: Checkout
        id: checkout-code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Helm Lint
        id: helm-lint
        run: |
          cd ${{ env.CHART_DIR }};
          helm lint *;
          helm template *;

      - name: Prepare values
        id: prepare-vars
        run: |
          owner=$(cut -d '/' -f 1 <<< "$GITHUB_REPOSITORY");
          echo "owner=$owner" >> $GITHUB_OUTPUT
          repo=$(cut -d '/' -f 2 <<< "$GITHUB_REPOSITORY");
          echo "repo=$repo" >> $GITHUB_OUTPUT          
          token=${{ secrets.GITHUB_TOKEN }};
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Get changes files
        id: get-changes
        run: |
          changed_files=`git diff --name-only HEAD origin/main | tr '\n' ' '`;
          echo "changed_files changes" $changed_files;
          echo "changed_files=$changed_files" >> $GITHUB_OUTPUT

      - name: Check chart version
        id: check-exist
        env:
          CHANGED_FILES: ${{ steps.get-changes.outputs.changed_files }}
          REGISTRY_ENDPOINT: "ghcr.io/trungtho/kubernetes-playground"
        run: |
          # Login to oci ghcr
          helm registry login ${{ env.REGISTRY_ENDPOINT }} --username  ${{ steps.prepare-vars.outputs.owner }} --password ${{ steps.prepare-vars.outputs.token }} && \

          # Loop through all chart, if there are changes -> check version
          for chart_dir in universal-helm/charts/*                                                                  
          do
            echo "=== evaluate chart $chart_dir ===";
            if echo ${{ env.CHANGED_FILES }} | grep $chart_dir; then
              pr_version=$(cat $chart_dir/Chart.yaml | yq ".version");
              if (helm pull oci://${{ env.REGISTRY_ENDPOINT }}/$chart_dir --version $pr_version); then
                echo "::error::Chart $chart_dir with version $pr_version is already existed!" && exit 1;
              else
                echo "::notice::Chart $chart_dir with version $pr_version doesn't exist, can start releasing"
              fi
            else
              echo "::notice::Chart $chart_dir doesn't change";
            fi
          done

  testing:
    name: Testing
    runs-on: ubuntu-latest
    needs: [linting]
    steps:
      - name: Checkout Helm Kind
        uses: actions/checkout@v4
        with:
          repository: helm/kind-action
          ref: v1.10.0
          path: helm-kind

      - name: Set up Kind
        uses: ./helm-kind/

      - name: Checkout
        id: checkout-code
        uses: actions/checkout@v4
        with:
          path: universal-helm
          fetch-depth: 0

      # Only test the main chart for now, other chart can also be tested by replicating this step
      - name: Deploy Helm chart & verify components
        run: . test-helm-deployment.sh
        working-directory: ./universal-helm/universal-helm/test
